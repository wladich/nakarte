'use strict'; // code generated by pbf v3.0.5

// Segment ========================================

var self = exports;

var Segment = self.Segment = {};

Segment.read = function (pbf, end) {
    return pbf.readFields(Segment._readField, {lats: [], lons: []}, end);
};
Segment._readField = function (tag, obj, pbf) {
    if (tag === 1) pbf.readPackedSVarint(obj.lats);
    else if (tag === 2) pbf.readPackedSVarint(obj.lons);
};
Segment.write = function (obj, pbf) {
    if (obj.lats) pbf.writePackedSVarint(1, obj.lats);
    if (obj.lons) pbf.writePackedSVarint(2, obj.lons);
};

// Waypoint ========================================

var Waypoint = self.Waypoint = {};

Waypoint.read = function (pbf, end) {
    return pbf.readFields(Waypoint._readField, {lat: 0, lon: 0, name: ""}, end);
};
Waypoint._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lat = pbf.readSVarint();
    else if (tag === 2) obj.lon = pbf.readSVarint();
    else if (tag === 3) obj.name = pbf.readString();
};
Waypoint.write = function (obj, pbf) {
    if (obj.lat) pbf.writeSVarintField(1, obj.lat);
    if (obj.lon) pbf.writeSVarintField(2, obj.lon);
    if (obj.name) pbf.writeStringField(3, obj.name);
};

// Waypoints ========================================

var Waypoints = self.Waypoints = {};

Waypoints.read = function (pbf, end) {
    return pbf.readFields(Waypoints._readField, {midLat: 0, midLon: 0, waypoints: []}, end);
};
Waypoints._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.midLat = pbf.readSVarint();
    else if (tag === 2) obj.midLon = pbf.readSVarint();
    else if (tag === 3) obj.waypoints.push(Waypoint.read(pbf, pbf.readVarint() + pbf.pos));
};
Waypoints.write = function (obj, pbf) {
    if (obj.midLat) pbf.writeSVarintField(1, obj.midLat);
    if (obj.midLon) pbf.writeSVarintField(2, obj.midLon);
    if (obj.waypoints) for (var i = 0; i < obj.waypoints.length; i++) pbf.writeMessage(3, Waypoint.write, obj.waypoints[i]);
};

// Track ========================================

var Track = self.Track = {};

Track.read = function (pbf, end) {
    return pbf.readFields(Track._readField, {name: "", segments: [], waypoints: null}, end);
};
Track._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.segments.push(Segment.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.waypoints = Waypoints.read(pbf, pbf.readVarint() + pbf.pos);
};
Track.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.segments) for (var i = 0; i < obj.segments.length; i++) pbf.writeMessage(2, Segment.write, obj.segments[i]);
    if (obj.waypoints) pbf.writeMessage(3, Waypoints.write, obj.waypoints);
};

// View ========================================

var View = self.View = {};

View.read = function (pbf, end) {
    return pbf.readFields(View._readField, {color: 0, shown: false, ticksShown: false}, end);
};
View._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.color = pbf.readVarint(true);
    else if (tag === 2) obj.shown = pbf.readBoolean();
    else if (tag === 3) obj.ticksShown = pbf.readBoolean();
};
View.write = function (obj, pbf) {
    if (obj.color) pbf.writeVarintField(1, obj.color);
    if (obj.shown) pbf.writeBooleanField(2, obj.shown);
    if (obj.ticksShown) pbf.writeBooleanField(3, obj.ticksShown);
};

// TrackView ========================================

var TrackView = self.TrackView = {};

TrackView.read = function (pbf, end) {
    return pbf.readFields(TrackView._readField, {view: null, track: null}, end);
};
TrackView._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.view = View.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.track = Track.read(pbf, pbf.readVarint() + pbf.pos);
};
TrackView.write = function (obj, pbf) {
    if (obj.view) pbf.writeMessage(1, View.write, obj.view);
    if (obj.track) pbf.writeMessage(2, Track.write, obj.track);
};
